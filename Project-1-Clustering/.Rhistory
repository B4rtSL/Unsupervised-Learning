data[data$Player.Name == 'Mikal Bridges',]['Position'] = 'SF'
# Spencer Dinwiddie
data[data$Player.Name == 'Spencer Dinwiddie',]['Position'] = 'PG'
# Patrick Beverley
data[data$Player.Name == 'Patrick Beverley',]['Position'] = 'PG'
# Matisse Thybulle
data[data$Player.Name == 'Matisse Thybulle',]['Position'] = 'SF'
# George Hill
data[data$Player.Name == 'George Hill',]['Position'] = 'PG'
# Kevin Knox
data[data$Player.Name == 'Kevin Knox',]['Position'] = 'SF'
data$Position = as.factor(data$Position)
summary(data$Position)
shorter_stats <- data[c('Player.Name', 'Position', 'MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')]
shorter_stats[!complete.cases(shorter_stats),]
shorter_stats = shorter_stats[complete.cases(shorter_stats),]
nikola_jokic = c('Nikola Jokic', 'C', 33.7, 24.5, 9.8, 1.3, 0.7, 11.8, 0.66, 0.701, 27.2, 0.308, 8.8)
shorter_stats <- rbind(shorter_stats, nikola_jokic)
numeric_cols <- c('MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')
shorter_stats[numeric_cols] <- lapply(shorter_stats[numeric_cols], as.numeric)
columns_shortcut = c('Player.Name','MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')
stats_PG = shorter_stats[shorter_stats$Position == 'PG', columns_shortcut]
summary(stats_PG[,2:12])
stats_SG = shorter_stats[shorter_stats$Position == 'SG', columns_shortcut]
summary(stats_SG[,2:12])
stats_SF = shorter_stats[shorter_stats$Position == 'SF', columns_shortcut]
summary(stats_SF[,2:12])
stats_PF = shorter_stats[shorter_stats$Position == 'PF', columns_shortcut]
summary(stats_PF[,2:12])
stats_C = shorter_stats[shorter_stats$Position == 'C', columns_shortcut]
summary(stats_C[,2:12])
library(gridExtra)
library(corrplot)
corrplot(cor(stats_PG[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats PG", mar=c(0,0,2,0))
corrplot(cor(stats_SG[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats SG", mar=c(0,0,2,0))
corrplot(cor(stats_SF[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats SF", mar=c(0,0,2,0))
corrplot(cor(stats_PF[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats PF", mar=c(0,0,2,0))
corrplot(cor(stats_C[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats C", mar=c(0,0,2,0))
scaled_PG = as.data.frame(lapply(stats_PG[,2:12], scale))
scaled_SG = as.data.frame(lapply(stats_SG[,2:12], scale))
scaled_SF = as.data.frame(lapply(stats_SF[,2:12], scale))
scaled_PF = as.data.frame(lapply(stats_PF[,2:12], scale))
scaled_C = as.data.frame(lapply(stats_C[,2:12], scale))
library(factoextra)
get_clust_tendency(scaled_PG, 2, graph=T)
get_clust_tendency(scaled_SG, 2, graph=T)
get_clust_tendency(scaled_SF, 2, graph=T)
get_clust_tendency(scaled_PF, 2, graph=T)
get_clust_tendency(scaled_C, 2, graph=T)
fviz_nbclust(scaled_PG, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SG, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SF, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PF, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_C, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
PG_clust <- eclust(scaled_PG, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(PG_clust, data = scaled_PG, elipse.type = 'convex')
fviz_silhouette(PG_clust)
SG_clust <- eclust(scaled_SG, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(SG_clust, data = scaled_SG, elipse.type = 'convex')
fviz_silhouette(SG_clust)
SF_clust <- eclust(scaled_SF, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(SF_clust, data = scaled_SF, elipse.type = 'convex')
fviz_silhouette(SF_clust)
PF_clust <- eclust(scaled_PF, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(PF_clust, data = scaled_PF, elipse.type = 'convex')
fviz_silhouette(PF_clust)
C_clust <- eclust(scaled_C, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(C_clust, data = scaled_C, elipse.type = 'convex')
fviz_silhouette(C_clust)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv('nba_2022-23_all_stats_with_salary.csv')
data$Position = as.factor(data$Position)
summary(data$Position)
data[data$Position == 'PG-SG' | data$Position == 'SF-PF' | data$Position == 'SF-SG' | data$Position == 'SG-PG',]
data$Position = as.character(data$Position)
# Kyrie Irving - PG
data[data$Player.Name == 'Kyrie Irving',]['Position'] = 'PG'
# Mikal Bridges
data[data$Player.Name == 'Mikal Bridges',]['Position'] = 'SF'
# Spencer Dinwiddie
data[data$Player.Name == 'Spencer Dinwiddie',]['Position'] = 'PG'
# Patrick Beverley
data[data$Player.Name == 'Patrick Beverley',]['Position'] = 'PG'
# Matisse Thybulle
data[data$Player.Name == 'Matisse Thybulle',]['Position'] = 'SF'
# George Hill
data[data$Player.Name == 'George Hill',]['Position'] = 'PG'
# Kevin Knox
data[data$Player.Name == 'Kevin Knox',]['Position'] = 'SF'
data$Position = as.factor(data$Position)
summary(data$Position)
shorter_stats <- data[c('Player.Name', 'Position', 'MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')]
shorter_stats[!complete.cases(shorter_stats),]
shorter_stats = shorter_stats[complete.cases(shorter_stats),]
nikola_jokic = c('Nikola Jokic', 'C', 33.7, 24.5, 9.8, 1.3, 0.7, 11.8, 0.66, 0.701, 27.2, 0.308, 8.8)
shorter_stats <- rbind(shorter_stats, nikola_jokic)
numeric_cols <- c('MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')
shorter_stats[numeric_cols] <- lapply(shorter_stats[numeric_cols], as.numeric)
columns_shortcut = c('Player.Name','MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')
stats_PG = shorter_stats[shorter_stats$Position == 'PG', columns_shortcut]
summary(stats_PG[,2:12])
stats_SG = shorter_stats[shorter_stats$Position == 'SG', columns_shortcut]
summary(stats_SG[,2:12])
stats_SF = shorter_stats[shorter_stats$Position == 'SF', columns_shortcut]
summary(stats_SF[,2:12])
stats_PF = shorter_stats[shorter_stats$Position == 'PF', columns_shortcut]
summary(stats_PF[,2:12])
stats_C = shorter_stats[shorter_stats$Position == 'C', columns_shortcut]
summary(stats_C[,2:12])
library(gridExtra)
library(corrplot)
corrplot(cor(stats_PG[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats PG", mar=c(0,0,2,0))
corrplot(cor(stats_SG[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats SG", mar=c(0,0,2,0))
corrplot(cor(stats_SF[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats SF", mar=c(0,0,2,0))
corrplot(cor(stats_PF[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats PF", mar=c(0,0,2,0))
corrplot(cor(stats_C[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats C", mar=c(0,0,2,0))
scaled_PG = as.data.frame(lapply(stats_PG[,2:12], scale))
scaled_SG = as.data.frame(lapply(stats_SG[,2:12], scale))
scaled_SF = as.data.frame(lapply(stats_SF[,2:12], scale))
scaled_PF = as.data.frame(lapply(stats_PF[,2:12], scale))
scaled_C = as.data.frame(lapply(stats_C[,2:12], scale))
library(factoextra)
get_clust_tendency(scaled_PG, 2, graph=T)
get_clust_tendency(scaled_SG, 2, graph=T)
get_clust_tendency(scaled_SF, 2, graph=T)
get_clust_tendency(scaled_PF, 2, graph=T)
get_clust_tendency(scaled_C, 2, graph=T)
fviz_nbclust(scaled_PG, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SG, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SF, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PF, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_C, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
PG_clust <- eclust(scaled_PG, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(PG_clust, data = scaled_PG, elipse.type = 'convex')
fviz_silhouette(PG_clust)
SG_clust <- eclust(scaled_SG, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(SG_clust, data = scaled_SG, elipse.type = 'convex')
fviz_silhouette(SG_clust)
SF_clust <- eclust(scaled_SF, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(SF_clust, data = scaled_SF, elipse.type = 'convex')
fviz_silhouette(SF_clust)
PF_clust <- eclust(scaled_PF, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(PF_clust, data = scaled_PF, elipse.type = 'convex')
fviz_silhouette(PF_clust)
C_clust <- eclust(scaled_C, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(C_clust, data = scaled_C, elipse.type = 'convex')
fviz_silhouette(C_clust)
fviz_nbclust(scaled_PG, FUNcluster = 'kmeans', method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PG, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SG, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SF, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PF, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_C, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_C, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PG, FUNcluster = hcut, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SG, FUNcluster = hcut, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SF, FUNcluster = hcut, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PF, FUNcluster = hcut, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_C, FUNcluster = hcut, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_SF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_PF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
fviz_nbclust(scaled_C, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic()
e
SF_clust
PG_viz_kmeans = fviz_nbclust(scaled_PG, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
SG_viz_kmeans = fviz_nbclust(scaled_SG, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
SF_viz_kmeans = fviz_nbclust(scaled_SF, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
PF_viz_kmeans = fviz_nbclust(scaled_PF, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
C_viz_kmeans = fviz_nbclust(scaled_C, FUNcluster = kmeans, method = 'silhouette') + theme_classic()
PG_viz_kmeans = fviz_nbclust(scaled_PG, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans PG')
SG_viz_kmeans = fviz_nbclust(scaled_SG, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans SG')
SF_viz_kmeans = fviz_nbclust(scaled_SF, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans SF')
PF_viz_kmeans = fviz_nbclust(scaled_PF, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans PF')
C_viz_kmeans = fviz_nbclust(scaled_C, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans C')
PG_viz_pam = fviz_nbclust(scaled_PG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM PG')
SG_viz_pam = fviz_nbclust(scaled_SG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM SG')
SF_viz_pam = fviz_nbclust(scaled_SF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM SF')
PF_viz_pam = fviz_nbclust(scaled_PF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM PF')
C_viz_pam = fviz_nbclust(scaled_C, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM C')
PG_viz_hcut = fviz_nbclust(scaled_PG, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical PG')
SG_viz_hcut = fviz_nbclust(scaled_SG, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical SG')
SF_viz_hcut = fviz_nbclust(scaled_SF, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical SF')
PF_viz_hcut = fviz_nbclust(scaled_PF, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical PF')
C_viz_hcut = fviz_nbclust(scaled_C, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical C')
grid_kmeans = c(PG_viz_kmeans, SG_viz_kmeans, SF_viz_kmeans, PF_viz_kmeans, C_viz_kmeans)
grid_pam = c(PG_viz_pam, SG_viz_pam, SF_viz_pam, PF_viz_pam, C_viz_pam)
grid.arrange(grid_kmeans, grid_pam, ncol=2)
grid.arrange(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3)
knitr::opts_chunk$set(echo = TRUE)
#grid.arrange(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3)
grid.arrange(
arrangeGrob(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3),
layout_matrix = matrix(c(1, 2, 3), ncol = 3, byrow = TRUE),
heights = c(1, 1, 1)
)
#grid.arrange(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3)
library(gridExtra)
grid.arrange(
arrangeGrob(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3),
layout_matrix = matrix(c(1, 2, 3), ncol = 3, byrow = TRUE),
heights = c(1, 1, 1)
)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv('nba_2022-23_all_stats_with_salary.csv')
data$Position = as.factor(data$Position)
summary(data$Position)
data[data$Position == 'PG-SG' | data$Position == 'SF-PF' | data$Position == 'SF-SG' | data$Position == 'SG-PG',]
data$Position = as.character(data$Position)
# Kyrie Irving - PG
data[data$Player.Name == 'Kyrie Irving',]['Position'] = 'PG'
# Mikal Bridges
data[data$Player.Name == 'Mikal Bridges',]['Position'] = 'SF'
# Spencer Dinwiddie
data[data$Player.Name == 'Spencer Dinwiddie',]['Position'] = 'PG'
# Patrick Beverley
data[data$Player.Name == 'Patrick Beverley',]['Position'] = 'PG'
# Matisse Thybulle
data[data$Player.Name == 'Matisse Thybulle',]['Position'] = 'SF'
# George Hill
data[data$Player.Name == 'George Hill',]['Position'] = 'PG'
# Kevin Knox
data[data$Player.Name == 'Kevin Knox',]['Position'] = 'SF'
data$Position = as.factor(data$Position)
summary(data$Position)
shorter_stats <- data[c('Player.Name', 'Position', 'MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')]
shorter_stats[!complete.cases(shorter_stats),]
shorter_stats = shorter_stats[complete.cases(shorter_stats),]
nikola_jokic = c('Nikola Jokic', 'C', 33.7, 24.5, 9.8, 1.3, 0.7, 11.8, 0.66, 0.701, 27.2, 0.308, 8.8)
shorter_stats <- rbind(shorter_stats, nikola_jokic)
numeric_cols <- c('MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')
shorter_stats[numeric_cols] <- lapply(shorter_stats[numeric_cols], as.numeric)
columns_shortcut = c('Player.Name','MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')
stats_PG = shorter_stats[shorter_stats$Position == 'PG', columns_shortcut]
summary(stats_PG[,2:12])
stats_SG = shorter_stats[shorter_stats$Position == 'SG', columns_shortcut]
summary(stats_SG[,2:12])
stats_SF = shorter_stats[shorter_stats$Position == 'SF', columns_shortcut]
summary(stats_SF[,2:12])
stats_PF = shorter_stats[shorter_stats$Position == 'PF', columns_shortcut]
summary(stats_PF[,2:12])
stats_C = shorter_stats[shorter_stats$Position == 'C', columns_shortcut]
summary(stats_C[,2:12])
library(gridExtra)
library(corrplot)
corrplot(cor(stats_PG[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats PG", mar=c(0,0,2,0))
corrplot(cor(stats_SG[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats SG", mar=c(0,0,2,0))
corrplot(cor(stats_SF[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats SF", mar=c(0,0,2,0))
corrplot(cor(stats_PF[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats PF", mar=c(0,0,2,0))
corrplot(cor(stats_C[,2:12], use="complete"), method="number", type="upper", diag=F, tl.col="black", tl.srt=45, tl.cex=0.9, number.cex=0.8, title="Stats C", mar=c(0,0,2,0))
scaled_PG = as.data.frame(lapply(stats_PG[,2:12], scale))
scaled_SG = as.data.frame(lapply(stats_SG[,2:12], scale))
scaled_SF = as.data.frame(lapply(stats_SF[,2:12], scale))
scaled_PF = as.data.frame(lapply(stats_PF[,2:12], scale))
scaled_C = as.data.frame(lapply(stats_C[,2:12], scale))
library(factoextra)
get_clust_tendency(scaled_PG, 2, graph=T)
get_clust_tendency(scaled_SG, 2, graph=T)
get_clust_tendency(scaled_SF, 2, graph=T)
get_clust_tendency(scaled_PF, 2, graph=T)
get_clust_tendency(scaled_C, 2, graph=T)
PG_viz_kmeans = fviz_nbclust(scaled_PG, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans PG')
SG_viz_kmeans = fviz_nbclust(scaled_SG, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans SG')
SF_viz_kmeans = fviz_nbclust(scaled_SF, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans SF')
PF_viz_kmeans = fviz_nbclust(scaled_PF, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans PF')
C_viz_kmeans = fviz_nbclust(scaled_C, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans C')
PG_clust <- eclust(scaled_PG, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(PG_clust, data = scaled_PG, elipse.type = 'convex')
fviz_silhouette(PG_clust)
SG_clust <- eclust(scaled_SG, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(SG_clust, data = scaled_SG, elipse.type = 'convex')
fviz_silhouette(SG_clust)
SF_clust <- eclust(scaled_SF, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(SF_clust, data = scaled_SF, elipse.type = 'convex')
fviz_silhouette(SF_clust)
PF_clust <- eclust(scaled_PF, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(PF_clust, data = scaled_PF, elipse.type = 'convex')
fviz_silhouette(PF_clust)
C_clust <- eclust(scaled_C, FUNcluster = 'kmeans', k=2, graph=F)
fviz_cluster(C_clust, data = scaled_C, elipse.type = 'convex')
fviz_silhouette(C_clust)
PG_viz_pam = fviz_nbclust(scaled_PG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM PG')
SG_viz_pam = fviz_nbclust(scaled_SG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM SG')
SF_viz_pam = fviz_nbclust(scaled_SF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM SF')
PF_viz_pam = fviz_nbclust(scaled_PF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM PF')
C_viz_pam = fviz_nbclust(scaled_C, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM C')
PG_viz_hcut = fviz_nbclust(scaled_PG, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical PG')
SG_viz_hcut = fviz_nbclust(scaled_SG, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical SG')
SF_viz_hcut = fviz_nbclust(scaled_SF, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical SF')
PF_viz_hcut = fviz_nbclust(scaled_PF, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical PF')
C_viz_hcut = fviz_nbclust(scaled_C, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical C')
grid_kmeans = c(PG_viz_kmeans, SG_viz_kmeans, SF_viz_kmeans, PF_viz_kmeans, C_viz_kmeans)
grid_pam = c(PG_viz_pam, SG_viz_pam, SF_viz_pam, PF_viz_pam, C_viz_pam)
#grid.arrange(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3)
library(gridExtra)
grid.arrange(
arrangeGrob(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3),
layout_matrix = matrix(c(1, 2, 3), ncol = 3, byrow = TRUE),
heights = c(1, 1, 1)
)
?grid.arrange
library(gridExtra)
grid.arrange(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3, )
library(gridExtra)
grid.arrange(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3)
PG_viz_kmeans$data
PG_viz_kmeans$mapping
PG_viz_kmeans$coordinates
?fviz_nbclust
library(gridExtra)
grid.arrange(PG_viz_kmeans, PG_viz_pam, PG_viz_hcut, ncol=3)
grid.arrange(SG_viz_kmeans, SG_viz_pam, SG_viz_hcut, ncol=3)
grid.arrange(SF_viz_kmeans, SF_viz_pam, SF_viz_hcut, ncol=3)
grid.arrange(PF_viz_kmeans, PF_viz_pam, PF_viz_hcut, ncol=3)
grid.arrange(C_viz_kmeans, C_viz_pam, C_viz_hcut, ncol=3)
PG_viz_hcut = fviz_nbclust(scaled_PG, FUNcluster = hcut(hc_func=hclust), method = 'silhouette') + theme_classic() + ggtitle('Hierarchical PG')
PG_viz_hcut = fviz_nbclust(scaled_PG, FUNcluster = hcut(), method = 'silhouette') + theme_classic() + ggtitle('Hierarchical PG')
PG_viz_hcut = fviz_nbclust(scaled_PG, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical PG')
SG_viz_hcut = fviz_nbclust(scaled_SG, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical SG')
SF_viz_hcut = fviz_nbclust(scaled_SF, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical SF')
PF_viz_hcut = fviz_nbclust(scaled_PF, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical PF')
C_viz_hcut = fviz_nbclust(scaled_C, FUNcluster = hcut, method = 'silhouette') + theme_classic() + ggtitle('Hierarchical C')
grid.arrange(fviz_cluster(PG_clust, data = scaled_PG, elipse.type = 'convex'), fviz_cluster(SG_clust, data = scaled_SG, elipse.type = 'convex'), fviz_cluster(SF_clust, data = scaled_SF, elipse.type = 'convex'), fviz_cluster(PF_clust, data = scaled_PF, elipse.type = 'convex'), fviz_cluster(C_clust, data = scaled_C, elipse.type = 'convex'), ncol=3)
grid.arrange(fviz_cluster(PG_clust, data = scaled_PG, elipse.type = 'convex'), fviz_cluster(SG_clust, data = scaled_SG, elipse.type = 'convex'), fviz_cluster(SF_clust, data = scaled_SF, elipse.type = 'convex'), fviz_cluster(PF_clust, data = scaled_PF, elipse.type = 'convex'), fviz_cluster(C_clust, data = scaled_C, elipse.type = 'convex'), ncol=2)
grid.arrange(
fviz_cluster(PG_clust, data = scaled_PG, elipse.type = 'convex'),
fviz_silhouette(PG_clust),
ncol=2)
grid.arrange(
fviz_cluster(PG_clust, data = scaled_PG, elipse.type = 'convex', title='Kmeans PG'),
fviz_silhouette(PG_clust),
ncol=2)
grid.arrange(
fviz_cluster(PG_clust,
data = scaled_PG,
elipse.type = 'convex',
main='Kmeans PG'),
fviz_silhouette(PG_clust),
ncol=2)
PG_viz_kmeans = fviz_nbclust(scaled_PG, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans PG')
SG_viz_kmeans = fviz_nbclust(scaled_SG, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans SG')
SF_viz_kmeans = fviz_nbclust(scaled_SF, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans SF')
PF_viz_kmeans = fviz_nbclust(scaled_PF, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans PF')
C_viz_kmeans = fviz_nbclust(scaled_C, FUNcluster = kmeans, method = 'silhouette') + theme_classic() + ggtitle('Kmeans C')
PG_viz_pam = fviz_nbclust(scaled_PG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM PG')
SG_viz_pam = fviz_nbclust(scaled_SG, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM SG')
SF_viz_pam = fviz_nbclust(scaled_SF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM SF')
PF_viz_pam = fviz_nbclust(scaled_PF, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM PF')
C_viz_pam = fviz_nbclust(scaled_C, FUNcluster = cluster::pam, method = 'silhouette') + theme_classic() + ggtitle('PAM C')
library(gridExtra)
grid.arrange(PG_viz_kmeans, PG_viz_pam, ncol=2)
grid.arrange(SG_viz_kmeans, SG_viz_pam, ncol=2)
grid.arrange(SF_viz_kmeans, SF_viz_pam, ncol=2)
grid.arrange(PF_viz_kmeans, PF_viz_pam, ncol=2)
grid.arrange(C_viz_kmeans, C_viz_pam, ncol=2)
library(factoextra)
library(cluster)
get_clust_tendency(scaled_PG, 2, graph=T)
get_clust_tendency(scaled_SG, 2, graph=T)
get_clust_tendency(scaled_SF, 2, graph=T)
get_clust_tendency(scaled_PF, 2, graph=T)
get_clust_tendency(scaled_C, 2, graph=T)
PG_clust <- eclust(scaled_PG, FUNcluster = 'kmeans', k=2, graph=F)
SG_clust <- eclust(scaled_SG, FUNcluster = 'kmeans', k=2, graph=F)
SF_clust <- eclust(scaled_SF, FUNcluster = 'kmeans', k=2, graph=F)
PF_clust <- eclust(scaled_PF, FUNcluster = 'kmeans', k=2, graph=F)
C_clust <- eclust(scaled_C, FUNcluster = 'kmeans', k=2, graph=F)
grid.arrange(
fviz_cluster(PG_clust,
data = scaled_PG,
elipse.type = 'convex',
main='Kmeans PG'),
fviz_silhouette(PG_clust),
ncol=2)
grid.arrange(
fviz_cluster(SG_clust,
data = scaled_SG,
elipse.type = 'convex',
main='Kmeans SG'),
fviz_silhouette(SG_clust),
ncol=2)
grid.arrange(
fviz_cluster(SF_clust,
data = scaled_SF,
elipse.type = 'convex',
main='Kmeans SF'),
fviz_silhouette(SF_clust),
ncol=2)
grid.arrange(
fviz_cluster(PF_clust,
data = scaled_PF,
elipse.type = 'convex',
main='Kmeans PF'),
fviz_silhouette(PF_clust),
ncol=2)
grid.arrange(
fviz_cluster(C_clust,
data = scaled_C,
elipse.type = 'convex',
main='Kmeans C'),
fviz_silhouette(C_clust),
ncol=2)
PG_clust_pam <- eclust(scaled_PG, FUNcluster = 'pam', k=2, graph=F)
SG_clust_pam <- eclust(scaled_SG, FUNcluster = 'pam', k=2, graph=F)
SF_clust_pam <- eclust(scaled_SF, FUNcluster = 'pam', k=2, graph=F)
PF_clust_pam <- eclust(scaled_PF, FUNcluster = 'pam', k=2, graph=F)
C_clust_pam <- eclust(scaled_C, FUNcluster = 'pam', k=2, graph=F)
grid.arrange(
fviz_cluster(PG_clust_pam,
data = scaled_PG,
elipse.type = 'convex',
main='PAM PG'),
fviz_silhouette(PG_clust_pam),
ncol=2)
grid.arrange(
fviz_cluster(SG_clust_pam,
data = scaled_SG,
elipse.type = 'convex',
main='PAM SG'),
fviz_silhouette(SG_clust_pam),
ncol=2)
grid.arrange(
fviz_cluster(SF_clust_pam,
data = scaled_SF,
elipse.type = 'convex',
main='PAM SF'),
fviz_silhouette(SF_clust_pam),
ncol=2)
grid.arrange(
fviz_cluster(PF_clust_pam,
data = scaled_PF,
elipse.type = 'convex',
main='PAM PF'),
fviz_silhouette(PF_clust_pam),
ncol=2)
grid.arrange(
fviz_cluster(C_clust_pam,
data = scaled_C,
elipse.type = 'convex',
main='PAM C'),
fviz_silhouette(C_clust_pam),
ncol=2)
?sumary
?summary
class(summary(stats_PG[,2:12]))
stats_PG = shorter_stats[shorter_stats$Position == 'PG', columns_shortcut]
knitr::kable(summary(stats_PG[,2:12]), format = "markdown")
stats_PG = shorter_stats[shorter_stats$Position == 'PG', columns_shortcut]
summary(stats_PG[,2:12])
stats_PG = shorter_stats[shorter_stats$Position == 'PG', columns_shortcut]
summary(stats_PG[,2:12])
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv('nba_2022-23_all_stats_with_salary.csv')
data$Position = as.factor(data$Position)
summary(data$Position)
data[data$Position == 'PG-SG' | data$Position == 'SF-PF' | data$Position == 'SF-SG' | data$Position == 'SG-PG',]
data$Position = as.character(data$Position)
# Kyrie Irving - PG
data[data$Player.Name == 'Kyrie Irving',]['Position'] = 'PG'
# Mikal Bridges
data[data$Player.Name == 'Mikal Bridges',]['Position'] = 'SF'
# Spencer Dinwiddie
data[data$Player.Name == 'Spencer Dinwiddie',]['Position'] = 'PG'
# Patrick Beverley
data[data$Player.Name == 'Patrick Beverley',]['Position'] = 'PG'
# Matisse Thybulle
data[data$Player.Name == 'Matisse Thybulle',]['Position'] = 'SF'
# George Hill
data[data$Player.Name == 'George Hill',]['Position'] = 'PG'
# Kevin Knox
data[data$Player.Name == 'Kevin Knox',]['Position'] = 'SF'
data$Position = as.factor(data$Position)
summary(data$Position)
shorter_stats <- data[c('Player.Name', 'Position', 'MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')]
shorter_stats[!complete.cases(shorter_stats),]
shorter_stats = shorter_stats[complete.cases(shorter_stats),]
nikola_jokic = c('Nikola Jokic', 'C', 33.7, 24.5, 9.8, 1.3, 0.7, 11.8, 0.66, 0.701, 27.2, 0.308, 8.8)
shorter_stats <- rbind(shorter_stats, nikola_jokic)
numeric_cols <- c('MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')
shorter_stats[numeric_cols] <- lapply(shorter_stats[numeric_cols], as.numeric)
columns_shortcut = c('Player.Name','MP', 'PTS', 'AST', 'STL', 'BLK', 'TRB', 'eFG.', 'TS.', 'USG.', 'WS.48','VORP')
stats_PG = shorter_stats[shorter_stats$Position == 'PG', columns_shortcut]
summary(stats_PG[,2:12])
stats_PG = shorter_stats[shorter_stats$Position == 'PG', columns_shortcut]
summary(stats_PG[,2:12])
stats_PG = shorter_stats[shorter_stats$Position == 'PG', columns_shortcut]
summary(stats_PG[,2:12])
PG_clust$silinfo
length(stats_PG)
length(stats_PG[,1])
kmeans_avg = c(PG_clust$silinfo$avg.width, SG_clust$silinfo$avg.width, SF_clust$silinfo$avg.width, PF_clust$silinfo$avg.width, C_clust$silinfo$avg.width)
kmeans_sils = c(PG_clust$silinfo$avg.width, SG_clust$silinfo$avg.width, SF_clust$silinfo$avg.width, PF_clust$silinfo$avg.width, C_clust$silinfo$avg.width)
kmeans_weigths = c(length(stats_PG[,1])/467, length(stats_SG[,1])/467,length(stats_SF[,1])/467, length(stats_PF[,1])/467, length(stats_C[,1])/467,)
kmeans_sils = c(PG_clust$silinfo$avg.width, SG_clust$silinfo$avg.width, SF_clust$silinfo$avg.width, PF_clust$silinfo$avg.width, C_clust$silinfo$avg.width)
kmeans_weigths = c(length(stats_PG[,1])/467, length(stats_SG[,1])/467,length(stats_SF[,1])/467, length(stats_PF[,1])/467, length(stats_C[,1])/467)
kmeans_sils = c(PG_clust$silinfo$avg.width, SG_clust$silinfo$avg.width, SF_clust$silinfo$avg.width, PF_clust$silinfo$avg.width, C_clust$silinfo$avg.width)
kmeans_weigths = c(length(stats_PG[,1])/467, length(stats_SG[,1])/467,length(stats_SF[,1])/467, length(stats_PF[,1])/467, length(stats_C[,1])/467)
weighted.mean(kmeans_sils, kmeans_weigths)
kmeans_sils = c(PG_clust$silinfo$avg.width, SG_clust$silinfo$avg.width, SF_clust$silinfo$avg.width, PF_clust$silinfo$avg.width, C_clust$silinfo$avg.width)
kmeans_weigths = c(length(stats_PG[,1]), length(stats_SG[,1]),length(stats_SF[,1]), length(stats_PF[,1]), length(stats_C[,1]))
weighted.mean(kmeans_sils, kmeans_weigths)
kmeans_sils = c(PG_clust$silinfo$avg.width, SG_clust$silinfo$avg.width, SF_clust$silinfo$avg.width, PF_clust$silinfo$avg.width, C_clust$silinfo$avg.width)
kmeans_weigths = c(length(stats_PG[,1]), length(stats_SG[,1]),length(stats_SF[,1]), length(stats_PF[,1]), length(stats_C[,1]))
weighted.mean(kmeans_sils, kmeans_weigths)
pam_sils = c(PG_clust_pam$silinfo$avg.width, SG_clust_pam$silinfo$avg.width, SF_clust_pam$silinfo$avg.width, PF_clust_pam$silinfo$avg.width, C_clust_pam$silinfo$avg.width)
pam_weigths = c(length(stats_PG[,1]), length(stats_SG[,1]),length(stats_SF[,1]), length(stats_PF[,1]), length(stats_C[,1]))
weighted.mean(pam_sils, pam_weigths)
